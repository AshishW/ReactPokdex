{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","height","weight","image","className","src","alt","Cardlist","pokemon","length","map","i","sprites","front_default","SearchBox","searchChange","type","placeholder","onChange","App","onSearchChange","e","setState","searchfield","target","value","state","pokemonData","fetch","then","response","json","data","results","pkmn","url","temp","this","filteredPokemon","filter","toLowerCase","CardList","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAeeA,G,YAbH,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,GAAIC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,OAAkB,EAAVC,MACpC,OACI,sBAAKC,UAAU,OAAf,UACG,qBAAKA,UAAU,aAAaC,IAAG,mFAA8EN,EAA9E,QAAwFO,IAAM,iBAC7H,sBAAKF,UAAY,SAAjB,UACE,6CAAcJ,KACd,uDAAwBC,KACxB,uDAAwBC,aCwBtBK,EA/BC,SAAC,GAAa,IAAZC,EAAW,EAAXA,QAChB,OAAoB,IAAjBA,EAAQC,OAEP,sBAAKL,UAAU,OAAf,UACE,iDACA,0EAOF,8BAEII,EAAQE,KAAI,SAACF,EAASG,GACpB,OAAO,cAAC,EAAD,CACLZ,GAAKS,EAAQT,GAEdC,KAAQQ,EAAQR,KAChBC,OAAUO,EAAQP,OAClBC,OAAUM,EAAQN,OAClBC,MAASK,EAAQI,QAAQC,eAJlBL,EAAQT,UCLbe,G,MAZG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKX,UAAU,YAAf,SACI,uBACAY,KAAK,SACLC,YAAY,iDACZC,SAAaH,QCmCVI,E,kDAtCb,aAAc,IAAD,8BACX,gBAqBFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SArBrC,EAAKC,MAAQ,CACXH,YAAa,GACbI,YAAa,GACbnB,QAAS,IALA,E,gEAQO,IAAD,OAEjBoB,MADS,gDAERC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,EAAKV,SAAS,CAACd,QAASwB,EAAKC,UAC3B,kBAAK,EAAKP,MAAMlB,QAAQE,KAAI,SAAAwB,GAC5B,OAAON,MAAMM,EAAKC,KACRN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACzBF,MAAK,SAAAG,GAAS,EAAKV,UAAS,SAACc,GAAD,MAAS,CAACT,YAAY,GAAD,mBAAMS,EAAKT,aAAX,CAAwBK,sB,+BAQjF,IAAD,EAC6BK,KAAKX,MAAjCC,EADD,EACCA,YAAaJ,EADd,EACcA,YACde,EAAkBX,EAAYY,QAAO,SAAA/B,GAAY,OAAOA,EAAQR,KAAKwC,gBAAgBjB,EAAYiB,iBACvG,OACG,sBAAKpC,UAAU,OAAf,UACE,yCACA,cAAC,EAAD,CAAWW,aAAgBsB,KAAKjB,iBAChC,cAACqB,EAAD,CAAUjC,QAAW8B,W,GAjCZI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ae9bdca0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css'\r\nconst Card =({id, name, height, weight, image}) =>{\r\n    return(\r\n        <div className='card'>\r\n           <img className='pokemonImg' src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`} alt = 'pokeball.png'/>\r\n           <div className = 'detail'>\r\n             <h3>{`Name: ${name}`}</h3>\r\n             <h3>{`Height (in dm): ${height}`}</h3>\r\n             <h3>{`Weight (in hg): ${weight}`}</h3> \r\n           </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nconst Cardlist =({pokemon})=>{\r\n  if(pokemon.length===0){\r\n    return(\r\n      <div className='list'>\r\n        <h1>Enter a pokemon</h1>\r\n        <h2>{`(eg: Charizard, pikachu, raichu, etc)`}</h2>     \r\n      </div>\r\n      \r\n    );\r\n  }\r\n  else{\r\n    return(\r\n      <div>\r\n        {\r\n          pokemon.map((pokemon, i)=>{\r\n            return(<Card\r\n              id ={pokemon.id}\r\n              key ={pokemon.id}\r\n             name = {pokemon.name}\r\n             height = {pokemon.height}\r\n             weight = {pokemon.weight}   \r\n             image = {pokemon.sprites.front_default}         \r\n            />)\r\n          })\r\n        }\r\n      </div>\r\n  );\r\n}\r\n\r\n  }\r\n \r\nexport default Cardlist;","import React from 'react';\r\nimport './SearchBox.css'\r\nconst SearchBox = ({searchChange }) =>{\r\n    return(\r\n        <div className='searchBox'>\r\n            <input  \r\n            type='search' \r\n            placeholder='enter a pokemon (eg: pikachu, charizard, etc))'\r\n            onChange = { searchChange }\r\n            />\r\n        </div>\r\n        \r\n    );\r\n}\r\nexport default SearchBox;","import './App.css';\r\nimport React, { Component } from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nclass App extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      searchfield: '',\r\n      pokemonData: [],\r\n      pokemon: []\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    let url ='https://pokeapi.co/api/v2/pokemon/?limit=251';\r\n    fetch(url)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      this.setState({pokemon: data.results}\r\n      , () =>this.state.pokemon.map(pkmn =>{\r\n        return fetch(pkmn.url)\r\n                 .then(response => response.json())\r\n                  .then(data => {this.setState((temp)=>({pokemonData: [...temp.pokemonData, data] }))\r\n         })\r\n      }))\r\n    })\r\n  }\r\n  onSearchChange = (e) =>{\r\n    this.setState({searchfield: e.target.value});\r\n  }\r\n  render(){\r\n    const {pokemonData, searchfield} = this.state;\r\n    const filteredPokemon = pokemonData.filter(pokemon => {return pokemon.name.toLowerCase()===searchfield.toLowerCase()})\r\n    return(\r\n       <div className='main'>\r\n         <h1>POKEDEX</h1>\r\n         <SearchBox searchChange = {this.onSearchChange}/>\r\n         <CardList pokemon = {filteredPokemon} />\r\n       </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}